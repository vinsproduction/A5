<ul class="breadcrumb">
  <li>
    <a href="/manual">Manual</a> <span class="divider">/</span>
  </li>
  <li>
    <li class="active">Helpers</li>
  </li>
</ul>

<table class="table">
  <thead>	
  </thead>
  <tbody>
	
	<tr>				
		<td>	
		<pre class="prettyprint">declOfNum($number, $titles, $view_number=true)</pre>		
		<p>
		Функция для склонения чисел. Пример использования: declOfNum( 5, array( 'язык', 'языка', 'языков' ) )
		</p>
		</td>
    </tr>

	<tr>				
		<td>	
		<p><strong></strong></p>
		<pre class="prettyprint">text2string($value, $len = 60, $ellipsis = "...")</pre>
		<p>
<br/> Функция конвертирует любой текст в строку урезанную до указанного количества символов<br/>
<br/> Убирая переносы строк, html-тэги, лишние пробелы внутри и по краям, добавляет "..."<br/>
<br/> в конец если длина строки больше чем указанная длина
		</p>		
		</td>
    </tr>
	
	<tr>				
		<td>	
		<pre class="prettyprint">ltrim_lines($text)</pre>
		<p>
		Функция удаления лишних лидирующих пробелов и табуляций из каждой отдельной строки переданного текста
		</p>		
		</td>
    </tr>
	
	
	<tr>				
		<td>	
		<pre class="prettyprint">generate_key($max = 128)</pre>
		<p>
		Генерирует случайную комбинацию из 128 символов (или меньше если указано)
		</p>		
		</td>
    </tr>
	<tr>				
		<td>	
		<pre class="prettyprint">random($from = null, $to = null)</pre>
		<p>
<br/> Без параметров - возвращает float значение от 0 до 1 включительно
<br/> С одним параметром возвращает число от 0 до указанного параметра включительно
<br/> С двумя параметрами возвращает число от указанного до указанного включительно
		</p>		
		</td>
    </tr>
	<tr>				
		<td>	
		<pre class="prettyprint">is_empty($string)</pre>
		<p>
		Return false or true
		</p>		
		</td>
    </tr>
	<tr>				
		<td>	
		<pre class="prettyprint">j($s)</pre>
		<p>
<br/> Функция для квотирования строковой переменной
<br/> В строку JavaScript, экранирует все опасные символы
		</p>		
		</td>
    </tr>
	<tr>				
		<td>	
		<pre class="prettyprint">get_file_extension($name, $default = "")</pre>
		<p>
		Возвращает расширение файла если оно есть, на вход имя файла или полный путь
		</p>		
		</td>
    </tr>
	<tr>				
		<td>	
		<pre class="prettyprint">list2hash($arr)</pre>
		<p>
<br/> Функция создаёт из линейного массива переданного на вход ассоциативный массив, в качестве ключей беруться чётные
<br/> ёлементы, в качестве значение нечётные		
		</p>		
		</td>
    </tr>
	<tr>				
		<td>	
		<pre class="prettyprint">verticalize_list($list, $columns, $is_refresh_keys = false)</pre>
		<p>
Функция для подготовки массива к выводу вертикальным способом<br/>
Функция на вход принимает - массив, количество колонок для вывода массива<br/>
и третий не обязательный параметр - если передать его как true то ключи массива<br/>
не будут сохранены, иначе измениться только порядок элементов<br/><br/>

Пример работы функции:<br/>
<br/>Допустим у вас есть сортированный массив: array(0 => "a", 1 => "b", 2 => c, 3 => "d", 4 => "e", 5 => "f", 6 => "g")
<br/>И вы хотите вывести его в три колонки - выводя по-порядку каждый элемент и добавляя перенос
<br/>строки после каждого третьего вы получите что-то вроде:
<br/>a b c
<br/>d e f
<br/>g
<br/><br/>
<br/>Применив же данную функцию, на выходе вы получите такой массив: array(0 => "a", 3 => "d", 5 => "f", 1 => "b", 4 => "e", 6 => "g", 2 => "c")
<br/>и соотвественно при выводе его тем же способом вы получите:
<br/>a d f
<br/>b e g
<br/>c
		</p>		
		</td>
    </tr>
	
	<tr>				
		<td>	
		<pre class="prettyprint">tree_to_list($tree, $start_level = 0, $child_nodes_key = null, $level_key = null)</pre>
		<p>
Преобразует древовидную (бесконечной вложенности) структуру в сплошной список в порядке
обхода дерева с добавлением ключа "уровень" для обозначения глубины вложенности
Каждый элемент дерева должен содержать ключ "child_nodes" или иное указанное в соответствующем
параметре при вызове функции, данный ключ должен содержать список всех дочерних объектов,
которые в свою очередь могут также содержать данный ключ.
<pre class="prettyprint">
Пример:
$tree = array
(
	array
	(
		"name" => "Section 1", "child_nodes" => array
		(
			array("name" => "Subsection 1 1", "child_nodes" => array()),
			array("name" => "Subsection 1 2", "child_nodes" => array()),
			array("name" => "Subsection 1 3", "child_nodes" => array()),
		)
	),
	array
	(
		"name" => "Section 2", "child_nodes" => array
		(
			array("name" => "Subsection 2 1", "child_nodes" => array
			(
				array("name" => "Subsection 2 1 1", "child_nodes" => array()),
				array("name" => "Subsection 2 1 2", "child_nodes" => array()),
			)),
			array("name" => "Subsection 2 2", "child_nodes" => array()),
		)
	),
)

$list = tree_to_list($tree);

На выходе получим:
$list = array
(
	array("name" => "Section 1", "level" => 0),
	array("name" => "Subsection 1 1", "level" => "1"),
	array("name" => "Subsection 1 2", "level" => 1),
	array("name" => "Subsection 1 3", "level" => 1),
	array("name" => "Section 2", "level" => "0"),
	array("name" => "Subsection 2 1", "level" => 1),
	array("name" => "Subsection 2 1 1", "level" => 2),
	array("name" => "Subsection 2 1 2", "level" => 2),
	array("name" => "Subsection 2 2", "level" => 1),
);
</pre>	
		</p>		
		</td>
    </tr>
	
	<tr>				
		<td>	
		<pre class="prettyprint">tree_walk($tree, $callback_before = null, $callback_after = null, $child_nodes_key = null)</pre>
		<p>
<br/> Обход всего дерева с какой-либо целью
<br/> Первый параметр: аналогично функции tree_to_list
<br/> Второй и третий: callback-функция, на вход принимает текущий элемент первым параметром и его родительский - вторым
<br/> можно использовать передачу по ссылке чтобы произвести какие-то манипуляции с данными.
<br/> Отличие второго параметра от третьего в том что его вызов происходит до прохождения рекурсии.
<br/> Иными словами вызов функции из второго параметра будет происходить в порядке обхода дерева, с узла самого верхнего уровня
<br/> до узла самого последнего, а в третьем параметре будет происходить обратный эффект, его вызов начнётся с ноды самого
<br/> последнего уровня до ноды самого верхнего уровня.
<br/> Четвёртый параметр указывает на то когда была вызвана функция: before или after
<br/> Данный параметр полезен если вы будете использовать одну и ту же функцию для обоих вариантов вызова.
		</p>		
		</td>
    </tr>
	
	<tr>				
		<td>	
		<pre class="prettyprint">tree_reduce($tree, $callback, $child_nodes_key = null)</pre>
		<p>
<br/> Урезание дерева на основе каких-либо условий
<br/> Первый параметр: аналогично функции tree_to_list
<br/> Второй: callback-функция, на вход принимает текущий элемент первым параметром и его родительский - вторым
<br/> Функция должна вернуть true если нужно оставить в дереве текущий элемент, это означает что в дереве останется
<br/> текущий элемент и все его родительские элементы, если функция вернёт false то текущий элемент будет убран из дерева
<br/> и также возможно будут убраны все его родительские (если для них функция также вернула false)		
		</p>		
		</td>
    </tr>
	
	<tr>				
		<td>	
		<pre class="prettyprint">mkdirs($path, $mode = 0777)</pre>
		<p>
		Функция рекурсивного создания директорий
		</p>		
		</td>
    </tr>
	
	<tr>				
		<td>	
		<pre class="prettyprint">rmdirs($path)</pre>
		<p>
		Функция рекурсивного удаления содержимого директории
		</p>		
		</td>
    </tr>
	<tr>				
		<td>	
		<pre class="prettyprint">cleandir($path)</pre>
		<p>
<br/> Функция рекурсивного удаления пустых папок.
<br/> На вход получает путь к папке, проходится по содержимому всех
<br/> вложенных папок и удаляет все папки не содержащие данные, также удаляет указанную папку
<br/> если она в итоге окажется пустой.
<br/> Функция возвращает true если папка была удалена (т.е. не содеражала ничего, либо только пустые подпапки)
<br/> Функция возвращает null если папка была не пустая, это значит что пустые подпапки в ней были удалены (частично очищена)
<br/> Функция возвращает false и сообщение об ошибке если папку не смогли удалить (за неимением прав к примеру)		
		</p>		
		</td>
    </tr>

	
	
  </tbody>
</table>